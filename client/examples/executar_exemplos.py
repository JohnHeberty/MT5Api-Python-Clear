"""
Script para executar todos os exemplos do MT5 Trading Client

Execute este arquivo para testar todos os exemplos dispon√≠veis.
"""
import sys
import os
import asyncio

# Adicionar pasta pai ao path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


def mostrar_menu():
    """Mostrar menu de op√ß√µes"""
    print("=" * 70)
    print("üöÄ MT5 TRADING CLIENT - EXEMPLOS INTERATIVOS")
    print("=" * 70)
    print("\nEscolha um exemplo para executar:")
    print()
    print("1. üìã Exemplo B√°sico")
    print("   - Verificar conex√£o")
    print("   - Listar s√≠mbolos")
    print("   - Obter dados de mercado")
    print("   - Pre√ßos e varia√ß√µes atuais")
    print()
    print("2. üìä An√°lise de Mercado")
    print("   - Cota√ß√µes hist√≥ricas")
    print("   - M√©dias m√≥veis")
    print("   - An√°lise de volatilidade")
    print("   - Identifica√ß√£o de tend√™ncias")
    print()
    print("3. ‚ö° Uso Simples (S√≠ncrono)")
    print("   - Interface sem async/await")
    print("   - Monitoramento cont√≠nuo")
    print("   - Relat√≥rio r√°pido")
    print()
    print("4. üîß Testar Configura√ß√£o")
    print("   - Verificar conectividade")
    print("   - Validar depend√™ncias")
    print()
    print("0. üö™ Sair")
    print()


async def testar_configuracao():
    """Testar se tudo est√° funcionando"""
    
    print("\nüîß TESTANDO CONFIGURA√á√ÉO")
    print("=" * 40)
    
    try:
        # Testar imports
        print("1Ô∏è‚É£ Testando imports...")
        from mt5_client import MT5TradingClient, SimpleMT5Client
        print("   ‚úÖ Imports OK")
        
        # Testar conex√£o b√°sica
        print("\n2Ô∏è‚É£ Testando conex√£o com API...")
        client = MT5TradingClient(
            api_url="http://localhost:8000",
            timeout=10
        )
        
        try:
            async with client:
                health = await client.check_health()
                print(f"   ‚úÖ API Status: {health.status}")
                print(f"   üì° MT5 Connected: {health.mt5_connected}")
                
                if health.mt5_connected:
                    # Testar opera√ß√£o b√°sica
                    print("\n3Ô∏è‚É£ Testando opera√ß√£o b√°sica...")
                    symbols = await client.get_symbols()
                    print(f"   ‚úÖ {len(symbols)} s√≠mbolos obtidos")
                    
                    if symbols:
                        # Testar dados de mercado
                        test_symbol = symbols[0].name
                        market_data = await client.get_market_data(test_symbol)
                        if market_data:
                            print(f"   ‚úÖ Dados de mercado OK ({test_symbol})")
                        else:
                            print(f"   ‚ö†Ô∏è Dados de mercado n√£o obtidos ({test_symbol})")
                else:
                    print("   ‚ö†Ô∏è MT5 n√£o est√° conectado no servidor")
                
        except Exception as e:
            print(f"   ‚ùå Erro de conex√£o: {e}")
            print("   üí° Verifique se o servidor est√° rodando em localhost:8000")
            return False
        
        print("\n‚úÖ CONFIGURA√á√ÉO OK - Todos os exemplos devem funcionar!")
        return True
        
    except ImportError as e:
        print(f"   ‚ùå Erro de import: {e}")
        print("   üí° Execute: pip install -r requirements.txt")
        return False
    except Exception as e:
        print(f"   ‚ùå Erro inesperado: {e}")
        return False


def executar_exemplo_basico():
    """Executar exemplo b√°sico"""
    try:
        from exemplo_basico import exemplo_basico
        asyncio.run(exemplo_basico())
    except ImportError:
        print("‚ùå Arquivo exemplo_basico.py n√£o encontrado!")
    except Exception as e:
        print(f"‚ùå Erro ao executar exemplo b√°sico: {e}")


def executar_analise_mercado():
    """Executar an√°lise de mercado"""
    try:
        from exemplo_analise_mercado import exemplo_analise_mercado
        asyncio.run(exemplo_analise_mercado())
    except ImportError:
        print("‚ùå Arquivo exemplo_analise_mercado.py n√£o encontrado!")
    except Exception as e:
        print(f"‚ùå Erro ao executar an√°lise de mercado: {e}")


def executar_uso_simples():
    """Executar uso simples"""
    try:
        from exemplo_uso_simples import exemplo_uso_simples, exemplo_relatorio_rapido
        
        print("\nEscolha o sub-exemplo:")
        print("1. Uso b√°sico s√≠ncrono")
        print("2. Relat√≥rio r√°pido")
        
        sub_opcao = input("Digite a op√ß√£o (1-2): ").strip()
        
        if sub_opcao == "1":
            exemplo_uso_simples()
        elif sub_opcao == "2":
            exemplo_relatorio_rapido()
        else:
            print("‚ùå Op√ß√£o inv√°lida!")
            
    except ImportError:
        print("‚ùå Arquivo exemplo_uso_simples.py n√£o encontrado!")
    except Exception as e:
        print(f"‚ùå Erro ao executar uso simples: {e}")


async def main():
    """Fun√ß√£o principal"""
    
    while True:
        try:
            mostrar_menu()
            
            opcao = input("Digite sua op√ß√£o (0-4): ").strip()
            
            if opcao == "0":
                print("\nüëã Saindo... At√© logo!")
                break
                
            elif opcao == "1":
                print("\nüöÄ Executando Exemplo B√°sico...")
                executar_exemplo_basico()
                
            elif opcao == "2":
                print("\nüöÄ Executando An√°lise de Mercado...")
                executar_analise_mercado()
                
            elif opcao == "3":
                print("\nüöÄ Executando Uso Simples...")
                executar_uso_simples()
                
            elif opcao == "4":
                print("\nüöÄ Testando Configura√ß√£o...")
                await testar_configuracao()
                
            else:
                print("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.")
            
            # Pausa entre execu√ß√µes
            if opcao in ["1", "2", "3", "4"]:
                input("\n‚è∏Ô∏è Pressione Enter para continuar...")
                
        except KeyboardInterrupt:
            print("\n\nüëã Execu√ß√£o cancelada pelo usu√°rio. At√© logo!")
            break
        except Exception as e:
            print(f"\n‚ùå Erro inesperado: {e}")
            input("\n‚è∏Ô∏è Pressione Enter para continuar...")


if __name__ == "__main__":
    print("üîß Inicializando exemplos do MT5 Trading Client...")
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã Programa finalizado.")
    except Exception as e:
        print(f"\n‚ùå Erro fatal: {e}")
        input("\nPressione Enter para sair...")